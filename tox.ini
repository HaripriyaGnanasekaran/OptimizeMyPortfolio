[tox]
envlist = safety, linters, py

[optimizemyportfolio]
code_folders = src/ tests/ dev/

[flake8]
max-complexity = 5
filename=
    ./src/*.py, 
    ./src/**/*.py,
    ./tests/*.py,
    ./tests/**/*.py
max-line-length = 79
# select to limit the rules, because of conflicts with black.
select = C,E,F,W,B,B950
# Skip the following for the same reasons as above.
ignore = E501, W503, E241
statistics = True
exclude =
    __init__.py

[coverage:run]
branch = True
omit = 
    */__version__.py
    */__init__.py
    */src/attributes/*.py
source = src

[coverage:report]
fail_under = 90

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 79
known_first_party = optimizemyportfolio
known_third_party = pandas,pytest,yfinance,numpy,scipy,openpyxl

# Run the unit tests.
[testenv]
deps = 
    -c ./packages/dev.txt
    pytest
    pytest-cov
commands = 
    coverage run --parallel -m pytest tests

# Tests for any security vulnerabilities in the source code. 
[testenv:bandit]
skip_install = true
deps = 
    -c ./packages/dev.txt
    bandit
commands =
    bandit --recursive src/

# Test for PEP8 rules in src/ and tests/ folders.
[testenv:flake8]
skip_install = true
deps =
    -c ./packages/dev.txt
    flake8
commands =
    flake8 {posargs}

[testenv:black]
skip_install = true
deps =
    -c ./packages/dev.txt
    black
commands =
    black --check {[optimizemyportfolio]code_folders}

# Check for 3rd party vulnerabilities.
[testenv:safety]
skip_install = true
deps = 
    -c ./packages/dev.txt
    safety
commands = 
    safety check --ignore=39462 -r packages/dev.txt

# Check if all imports are sorted in order. 
[testenv:isort]
skip_install = true
deps =
    -c ./packages/dev.txt
    isort 
commands = 
    isort --check-only {[optimizemyportfolio]code_folders}

# Checks if all the typing are actually correct.
[testenv:mypy]
skip_install = true
deps = 
    -c ./packages/dev.txt
    mypy
commands = 
    mypy --ignore-missing-imports {[optimizemyportfolio]code_folders}

# Combines all linters in one, fast env. 
[testenv:linters]
skip_install = true
deps = 
    {[testenv:bandit]deps}
    {[testenv:black]deps}
    {[testenv:isort]deps}
    {[testenv:flake8]deps}
    {[testenv:mypy]deps}
commands =
    {[testenv:bandit]commands}
    {[testenv:black]commands}
    {[testenv:isort]commands}
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}

# Fix styling for Black and isort
[testenv:fix_styling]
skip_install = true
deps = 
    {[testenv:black]deps}
    {[testenv:flake8]deps}
    {[testenv:isort]deps}
commands = 
    black {[optimizemyportfolio]code_folders}
    isort {[optimizemyportfolio]code_folders}
    flake8 {[optimizemyportfolio]code_folders}
